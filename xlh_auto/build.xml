<?xml version="1.0" encoding="UTF-8"?>
<project name="xlh_auto" default="clean" basedir="D:\workspace\workspace-qa\xlh_auto">
    <property name="src.dir" value="${basedir}/src1" />
    <property name="dest.dir" value="${basedir}/classes" />
    <!--specify directory path-->
    <property name="libs.dir" value="${basedir}/libs"/>
	<property name="output.dir" value="${basedir}/test-output"/>
	<property name="reports.dir" value="${basedir}/reports"/>
	<property name="jar.file" value="xlhauto.jar" />
	<property name="dist.dir" value="D:/contrib" />
 	<tstamp>
 	   <format property="date" pattern="yyyy-MM-dd HH.mm.ss" />
 	</tstamp>	
    <path id="compile.path">
        <fileset dir="${libs.dir}">
            <include name="**/*.jar" />
        </fileset>
    </path>
    
     <path id="run.classpath">  
        <path refid="compile.path" />  
        <pathelement location="${dest.dir}" /> 
    </path> 
    
    <patternset id="no.java">  
        <exclude name="**/*.java" />  
    </patternset>
	
	<!--create directory where complied classes files are stored-->
    <target name="init">
        <mkdir dir="${dest.dir}" />
        <mkdir dir="${src.dir}" />
        <copy todir="${src.dir}"> 
             <fileset dir="${basedir}/src/main/java">
                <include name="**/*.java" />
             </fileset>  
        </copy> 
        <copy todir="${src.dir}">  
             <fileset dir="${basedir}/src/main/resources">  
                <include name="**/*.xml" />
                <include name="**/*.props" />
                <include name="**/*.xls" />
             </fileset>  
        </copy>
        
        <copy todir="${dest.dir}"> 
             <fileset dir="${src.dir}">
                <patternset refid="no.java" />
             </fileset>  
        </copy>
        
    </target>
	
    <target name="compile" depends="init">
        <javac encoding="UTF-8" srcdir="${src.dir}" destdir="${dest.dir}" classpathref="compile.path" includeantruntime="false" />
    </target>
	
     <!-- run testng ant task	 -->
   <taskdef resource="testngtasks" classpath="${libs.dir}/testng-6.8.jar" />
	
   <target name="run_tests" depends="compile" description="run tests">
	
	<testng classpathref="run.classpath" outputdir="${output.dir}_${date}" delegateCommandSystemProperties="true"> 
	   <xmlfileset dir="${basedir}" includes="testng.xml"/>
	</testng>	     	
  <antcall target="clean" /> 	
  </target>	
  
<!--   <target name="jar" depends="compile" >  
        <jar jarfile="${dist.dir}/${jar.file}" >  
            <fileset dir="${dest.dir}" includes="**/*.*" />  
        </jar>  
    </target>  -->
    
    <target name="clean" depends="run_tests">
	  <echo message="going to clean" />	
		 <delete dir="${src.dir}"/>
		 <delete dir="${output.dir}_${date}"/>
    </target>
    
    
    
<!--      <target name="runjar" depends="jar" >
        <java jar="${dist.dir}/${jar.file}" fork="yes" dir="${basedir}" /> 
    </target>  -->
    
<!--     <target name="run" depends="compile" >  
        <java classname="test.apptest.AndroidApk2_3_1" fork="yes" dir="${basedir}">
            <classpath refid="run.classpath" />  
        </java>  
    </target>   -->
  
<!--     <target name="Report" depends="run_tests"> 
      
        <antcall target="toRelease" />
        
    </target>
    
    <target name="toRelease">
	   <copy todir="${basedir}\release">
		  <fileset dir="${basedir}" />
		</copy>
	    <antcall target="clean" />	
	</target> -->
	

		 			 		
<!-- 	 <target name="transform">
		<echo message="going to optimize the test reports" />
	     <xslt in="${basedir}/test-output_${date}/testng-results.xml" style="${basedir}/testng-results.xsl" out="${basedir}/test-output_${date}/TestReport.html" 
	     	classpathref="compile.path">

	         <param name="testNgXslt.outputDir" expression="${basedir}/test-output_${date}/" />
	         <param name="testNgXslt.showRuntimeTotals" expression="true"/>

	     </xslt>
	 </target>
		
	 <target name="make_zip" depends="transform">
	   <echo message="going to generate the TestReport" />
	   <jar destfile="${reports.dir}/TestReport_${date}.zip" basedir="test-output_${date}" />
	 </target>
	 
	 <target name="send-mail" depends="make_zip"> 
		<echo message="going to send mail" />
	    <mail mailhost="smtpcom.263xmail.com" user="Allen_lu@lecast.com.cn" password="Le123456"
	    	subject="Test Reports">	    	  
	        <from address="allen_lu@lecast.com.cn"/>
	        <fileset dir="${reports.dir}"> 
	           <include name="TestReport_${date}.zip" />
	        </fileset>
	        <to address="allen_lu@lecast.com.cn"/>
	    	<message>  Test Reports as to the attachment,and the 'TestReport.html' in the zip is the overall of this test, thank you!</message>
	    </mail>  
	 </target> -->

	
</project>